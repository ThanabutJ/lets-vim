<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Let's VIM</title><link>https://thanabutj.github.io/lets-vim/</link><description>Recent content in Home on Let's VIM</description><generator>Hugo -- gohugo.io</generator><language>th-TH</language><lastBuildDate>Sun, 24 Apr 2022 20:27:08 +0700</lastBuildDate><atom:link href="https://thanabutj.github.io/lets-vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Editor/IDE</title><link>https://thanabutj.github.io/lets-vim/get-start/editor/</link><pubDate>Wed, 27 Apr 2022 00:08:42 +0700</pubDate><guid>https://thanabutj.github.io/lets-vim/get-start/editor/</guid><description>VIM มีอยู่ทุกที่ ในปัจจุบัน Code Editor ส่วนใหญ่นั้นมีการ support VIM keybinding ในรูปแบบ extension, package, หรือ native support แล้ว
ผมมั่นใจว่าเพื่อนน่าจะสามารถลง extension บน editor โปรดของเพื่อนๆกันเป็นปกติอยู่แล้วนะครับ ขออนุญาตเป็นแนะนำในรูปแบบขี้เป้าแทนการลงลายละเอียดนะครับ
ชี้เป้า support VIM keybinding ของแต่ละ editor VS code :: Vim extension IDEs ของตระกูล JetBrains :: IdeaVim เช่น IntelliJ, PyCharm, Goland, Android Studio Atom :: vim-mode package Sublime :: vintage xcode (สำหรับ xcode ไม่มีโอกาสได้ทดสอบว่า work ไหมนะครับ) native support on Beta xcode 13 Xvim หรือแม้กระทั่ง online editor อย่างเช่น codepen หรือ codesandbox เองนั้นก็มีการ support VIM keybinding เช่นกัน</description></item><item><title>1.1 VIM Basic Modes</title><link>https://thanabutj.github.io/lets-vim/basic/modes/</link><pubDate>Sun, 24 Apr 2022 19:26:27 +0700</pubDate><guid>https://thanabutj.github.io/lets-vim/basic/modes/</guid><description>VIM modes VIM mode คือ เป็นสิ่งที่เราเปลี่ยนไปมา เพื่อจะได้ทำสิ่งที่เราต้องการได้
เราสามารถดู mode ปัจุบันของเราได้ที่มุมซ้ายล่างของ EDITOR ของเรา VIM มี mode หลากหลาย mode แต่สำหรับในบน basic จะเริ่มจาก 2 mode แรกก่อนก็คือ
Normal Mode Insert Mode 1. Normal Mode Normal Mode นี้เป็น mode ที่อนุญาตให้เรา บังคับ cursor และ ทำ Action ต่างๆ (เราจะพูดถึง action ต่างๆในบทต่อๆไป)
ตาม ชื่อของ Normal Mode เลยครับ mode นี้คือ mode ที่เราควรจะอยู่ตลอดเวลา
เมื่อเราใช้งาน VIM จริงๆจังๆแล้ว Flow การทำงานของการใช้ VIM ก็จะกลาย loop ประมาณนี้
อยู่ Normal mode เลื่อน cursor ไปทำแหน่งที่ต้องการ ทำ action ที่ต้องการ ใน Mode อื่น กลับสู่ Normal Mode Repeat ในบทต่อๆไปจะแนะนำความสมารถของ Normal mode ว่าสามารถทำอะไรได้บ้าง ส่วนตอนนี้รู้จัก mode นี้ประมาณนี้ก่อนครับ</description></item><item><title>Remap Escape</title><link>https://thanabutj.github.io/lets-vim/get-start/remap-escape/</link><pubDate>Wed, 27 Apr 2022 01:10:48 +0700</pubDate><guid>https://thanabutj.github.io/lets-vim/get-start/remap-escape/</guid><description>Esc มันอยู่ไกล ในการใช้ VIM keybinding เราจะต้องมีการกดปุ่ม escape บ่อยมากๆ
ปัญหาคือ ปุ่ม escape บน keyboard อยู่ไกลทำให้ต้องเอื้อมไปกดพอสมควร
หรือที่แย่กว่านั้นถ้าใครใช้ mac รุ่นที่ไม่มีปุ่ม Esc แยกจะทำให้เราติดขัดอยู่มากเลยทีเดียว
ดังนั้นเลยโดยทั่วไป เราจะแนะนำให้ remap ปุ่ม escape ไปที่ปุ่ม cap-lock
Remap Caplock to Escape ในหลายๆ OS ก็มีวิธีแตกต่างกันไป ขอแนะนำสำหรับ Mac กับ Windows
Remap บน MAC การ remap ที่ mac นี่ทำได้ง่ายโดยการไปที่
System Preferences &amp;gt; Keyboard &amp;gt; Modifier Keys &amp;gt; map caps lock to escape ดูภาพจากที่นี่
Remap บน Windows การ remap บน windows จะไม่ได้มีวิธี setting แบบบน Mac ตรงๆ</description></item><item><title>1.2 Mnemonics</title><link>https://thanabutj.github.io/lets-vim/basic/mnemonics/</link><pubDate>Sun, 24 Apr 2022 20:22:23 +0700</pubDate><guid>https://thanabutj.github.io/lets-vim/basic/mnemonics/</guid><description>จากบทที่แล้ว ได้แนะนำให้รู้จัก i a ไปเรียบร้อยแล้ว
Key mnemonics Action i insert enter to insert mode from the &amp;lsquo;LEFT&amp;rsquo; of cursor a append enter to insert mode from the &amp;lsquo;RIGHT&amp;rsquo; of cursor เราจะสังเกตุเห็นได้ว่า ใน keymapping table มี column mnemonics อยู่ บทนี้เราจะแนะนำให้รู้จักกับ mnemonics ว่าคืออะไร
Mnemonics (n) คำหรือวลีที่ช่วยในการจำ
Keymapping ต่างๆใน VIM ไม่ได้ถูกเลือกมาแบบสุ่ม
แต่ส่วนใหญ่จะมีความพยายามให้ action กับ key บน keyboard มีความเชื่อมโยงกัน
จากบทที่แล้ว เราก็จะมี</description></item></channel></rss>