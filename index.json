[{"uri":"https://thanabutj.github.io/lets-vim/basic/modes/","title":"1.1 VIM Basic Modes","tags":[],"description":"","content":"VIM modes VIM mode คือ เป็นสิ่งที่เราเปลี่ยนไปมา เพื่อจะได้ทำสิ่งที่เราต้องการได้\n เราสามารถดู mode ปัจุบันของเราได้ที่มุมซ้ายล่างของ EDITOR ของเรา  VIM มี mode หลากหลาย mode แต่สำหรับในบน basic จะเริ่มจาก 2 mode แรกก่อนก็คือ\n Normal Mode Insert Mode  1. Normal Mode Normal Mode นี้เป็น mode ที่อนุญาตให้เรา บังคับ cursor และ ทำ Action ต่างๆ (เราจะพูดถึง action ต่างๆในบทต่อๆไป)\nตาม ชื่อของ Normal Mode เลยครับ mode นี้คือ mode ที่เราควรจะอยู่ตลอดเวลา\nเมื่อเราใช้งาน VIM จริงๆจังๆแล้ว Flow การทำงานของการใช้ VIM ก็จะกลาย loop ประมาณนี้\n อยู่ Normal mode เลื่อน cursor ไปทำแหน่งที่ต้องการ ทำ action ที่ต้องการ ใน Mode อื่น กลับสู่ Normal Mode Repeat  ในบทต่อๆไปจะแนะนำความสมารถของ Normal mode ว่าสามารถทำอะไรได้บ้าง ส่วนตอนนี้รู้จัก mode นี้ประมาณนี้ก่อนครับ\n2. Insert Mode คือ Mode ที่เราเปิดใช้เพื่อทำการพิมพ์\nแล้วเราจะเปลี่ยนเป็น Insert Mode ได้ยังไงหล่ะ\nเราสามารถเข้า mode นี้ด้วยกด key 2 key จาก Normal Mode\n   Key mnemonics Action     i insert enter to insert mode from the \u0026lsquo;LEFT\u0026rsquo; of cursor   a append enter to insert mode from the \u0026lsquo;RIGHT\u0026rsquo; of cursor    หลังจากที่เราเปลี่ยนเป็น insert mode แล้วก็จะสามารถพิมพิ์สิ่งที่เราต้องการได้\nแต่ทำไมต้องมี key ถึง 2 key แล้วอะไรคือ LEFT/RIGHT of cursor หล่ะ คำตอบคือ VIM cursor นั้นต่างจาก cursor ปกตินั่นเองครับ\nVIM Cursor ถ้าเราสังเกต cursor ของเราใน ขณะที่อยู่ใน Normal mode ของ VIM จะไม่เหมือน cursor ปกติทั่วไป\nNormal Cursor VIM Cursor เราจะเห็นได้ว่าลักษณะของ cursor นั้นเป็นสี่เหลี่ยมอยู่ด้านหลังของ text charactor ของปัจจุบันของเรา\nดั้งนั้นเวลาที่เราเปลี่ยน Normal mode \u0026gt; Insert Mode เราก็จะสามารถเลือกได้ว่าจะให้\n insert ตัวหนังสือที่ด้านหน้า cursor ของเรา หรือ append เข้าไปที่ด้านหลังของ cursor ของเรา  เคสตัวอย่าง สมมติว่าเรามี array ชื่อว่า user อย่างด้านล่าง แต่ที่จริงแล้วเราควรตั้งชื่อว่า users\n// ชื่อ array ที่อยากจะแก้ const user = [\u0026#39;userA\u0026#39;,\u0026#39;userB\u0026#39;,\u0026#39;userC\u0026#39;]  // อย่างในเคสนี้เราสามารถ ใช้ normal mode หรือ mouse เราก็ได้ // ขยับ cursor มาที่ตัว r แล้วพิมพ์ s ลงไปต่อท้ายได้เลย const users = [\u0026#39;userA\u0026#39;,\u0026#39;userB\u0026#39;,\u0026#39;userC\u0026#39;]  กลับสู่ Normal Mode วิธีการกลับสู่ Normal Mode จาก mode อื่นๆ เพียงแค่กดปุ่ม ESC\n"},{"uri":"https://thanabutj.github.io/lets-vim/basic/mnemonics/","title":"1.2 Mnemonics","tags":[],"description":"","content":"จากบทที่แล้ว ได้แนะนำให้รู้จัก i a ไปเรียบร้อยแล้ว\n   Key mnemonics Action     i insert enter to insert mode from the \u0026lsquo;LEFT\u0026rsquo; of cursor   a append enter to insert mode from the \u0026lsquo;RIGHT\u0026rsquo; of cursor    เราจะสังเกตุเห็นได้ว่า ใน keymapping table มี column mnemonics อยู่ บทนี้เราจะแนะนำให้รู้จักกับ mnemonics ว่าคืออะไร\n Mnemonics (n) คำหรือวลีที่ช่วยในการจำ\n Keymapping ต่างๆใน VIM ไม่ได้ถูกเลือกมาแบบสุ่ม\nแต่ส่วนใหญ่จะมีความพยายามให้ action กับ key บน keyboard มีความเชื่อมโยงกัน\nจากบทที่แล้ว เราก็จะมี\n   action key     insert i   append a    การที่ VIM ทำ keymapping เป็นลักษณะนี้ทำให้เราเวลาใช้งาน VIM เราก็สามารถคิดถึงเฉพาะ action ที่เราอยากทำ เช่น อยาก insert ก็ i อยาก append ก็ a\n Pattern แบบนี้ ก็ไม่ได้มีเฉพาะแค่ใน VIM\nshort-cut ที่เราใช้กันตลอด Ctrl+c ตัว c นี้ก็มาจาก copy เหมือนกัน\n ตัวอย่างอื่นๆ keymapping ด้านล่างนี้จะเป็น spoiler ซักหน่อย แต่ว่าเพื่อให้เห็นภาพว่า VIM มีการนำ mnemonics มาใช้ด้วย parttern ที่แบบนี้ มากกว่า a i ที่เราได้รู้จักกัน\n   action key     delete d   change c   undo u   redo ctrl+r    นอกจาก action ต่างๆก็ยังไม่ movement เช่นกัน\nตัวอย่าง cursor movement keymapping\n ลองอ่าน column cursr movement นำหน้าด้วยคำว่า move cursor to \u0026hellip;\nเช่น move cursor to word ถัดไป\n    cursor movement key     word ถัดไป w   before this word b   end of this word e    "},{"uri":"https://thanabutj.github.io/lets-vim/basic/","title":"Basic","tags":[],"description":"","content":"Chapter 1 Some Chapter title "},{"uri":"https://thanabutj.github.io/lets-vim/","title":"Home","tags":[],"description":"","content":"Introduction สวัสดีครับ ยินดีต้อนรับสู่ Let\u0026rsquo;s VIM blog\nผมตั้งใจให้เนื้อหาใน blog นี้เป็นตัวช่วยให้เพื่อนๆสามารถเริ่มต้นใช้ VIM ไปด้วยกันอย่างไม่ติดขัด\n"},{"uri":"https://thanabutj.github.io/lets-vim/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://thanabutj.github.io/lets-vim/tags/","title":"Tags","tags":[],"description":"","content":""}]